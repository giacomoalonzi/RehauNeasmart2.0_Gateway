openapi: '3.0.0'
info:
  title: 'Rehau Neasmart 2.0 Gateway API'
  version: '2.1.0'
  description: API for controlling a Rehau Neasmart 2.0 system via a Modbus gateway.
servers:
  - url: '/api/v1'
paths:
  /zones:
    get:
      summary: 'List all configured zones'
      description: Retrieves a list of all zones defined in the gateway configuration, along with their current state.
      responses:
        '200':
          description: 'A list of configured zones and their status.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesListResponse'
        '500':
          $ref: '#/components/responses/InternalError'
  /zones/{base_id}/{zone_id}:
    get:
      summary: 'Get specific zone information'
      parameters:
        - name: base_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 4
        - name: zone_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
      responses:
        '200':
          description: 'Detailed information for the specified zone.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    post:
      summary: 'Update zone parameters'
      description: Update the state and/or setpoint for a specific zone.
      parameters:
        - name: base_id
          in: path
          required: true
          schema:
            type: integer
        - name: zone_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdateRequest'
      responses:
        '200':
          description: 'Confirmation of the zone update.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  schemas:
    BaseInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: 'First Floor'
    ZoneInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
        label:
          type: string
          example: 'Living Room'
    Temperature:
      type: object
      properties:
        value:
          type: number
          format: float
          example: 21.5
        unit:
          type: string
          enum: [C, F]
          example: 'C'
    Zone:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/BaseInfo'
        zone:
          $ref: '#/components/schemas/ZoneInfo'
        state:
          type: string
          enum: ['presence', 'away', 'off', 'scheduled', 'holiday']
          example: 'presence'
        temperature:
          $ref: '#/components/schemas/Temperature'
        setpoint:
          $ref: '#/components/schemas/Temperature'
          nullable: true
        relative_humidity:
          type: integer
          example: 45
        address:
          type: integer
          example: 1300
    ZonesListResponse:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
        count:
          type: integer
          example: 8
    ZoneUpdateRequest:
      type: object
      properties:
        state:
          type: string
          enum: ['presence', 'away', 'off', 'scheduled', 'holiday']
          description: 'Descriptive state for the zone.'
          example: 'away'
        setpoint:
          type: number
          format: float
          description: "New temperature setpoint. Ignored if state is set to 'off'."
          example: 22.5
      minProperties: 1
    ZoneUpdateResponse:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/BaseInfo'
        zone:
          $ref: '#/components/schemas/ZoneInfo'
        updated:
          type: object
          properties:
            state:
              type: string
            setpoint:
              type: number
      required:
        - base
        - zone
        - updated
    Error:
      type: object
      properties:
        error:
          type: string
        status:
          type: integer
        details:
          type: object
          nullable: true
      required:
        - error
        - status
  responses:
    BadRequest:
      description: 'Bad request (e.g., validation error)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: 'Resource not found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: 'Service unavailable (e.g., Modbus communication error)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: 'Internal server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
